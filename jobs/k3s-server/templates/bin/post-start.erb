#!/bin/bash -eu

source /var/vcap/packages/k3s-utils/functions.sh
assert_declared_functions 'wait_for_file_creation' 'k3s_kubectl' 'k3s_wait_for_server_healthy' 'k3s_wait_for_node_ready' 'k3s_wait_for_system_pods_ready'

export STORE_DIR="/var/vcap/store/k3s-server"

export K3S_NODE_NAME=<%= spec.name %>-<%= spec.index %>
<% if_p('k3s.node_name_prefix') do |prefix| %>
    export K3S_NODE_NAME=<%= prefix %>-<%= spec.index %>
<% end %>

wait_for_file_creation "$STORE_DIR/k3s.yaml" 180
echo "File $STORE_DIR/k3s.yaml exists"

SERVER_IP='<%= spec.ip %>'
<%- if_p('k3s.master_vip_api') do |vip| -%>
SERVER_IP='<%= vip %>'
<%- end -%>

# prepare kubeconfig for remote access
cat "$STORE_DIR/k3s.yaml" | sed -r 's/(\b[0-9]{1,3}\.){3}[0-9]{1,3}\b'/"$SERVER_IP"/ > "$STORE_DIR/kubeconfig.yml"

export KUBECONFIG="$STORE_DIR/kubeconfig.yml"

# wait for k8s api to be available, wait for 5 minutes max
timeout 300 sh -c "until nc -z $SERVER_IP 6443; do sleep 1; done"
echo "Server is available"

k3s_wait_for_server_healthy "$KUBECONFIG" 300
echo "K3s server is healthy"

k3s_wait_for_node_ready "$KUBECONFIG" "$K3S_NODE_NAME" 300
echo "K3s node '$K3S_NODE_NAME' is ready"

# mark node as schedulable.
k3s_kubectl uncordon "$K3S_NODE_NAME"
echo "K3s node '$K3S_NODE_NAME' is marked as schedulable"

k3s_wait_for_system_pods_ready "$KUBECONFIG" 300
echo "K3s pods are ready"

# tempo to wait for kubelet to schedule pods before finishing instance group update
# sleep <%= p('k3s.bosh-post-start-delay-seconds') %>
