#!/bin/bash

export JOB_DIR="/var/vcap/jobs/k3s-server"
# Setup ssh env vars
${JOB_DIR}/bin/setup-user-env

source /var/vcap/packages/k3s-utils/functions.sh
assert_declared_functions 'k3s_check_config' 'disable_ni_hardware_option' 'force_link_dir'

# Adapt the kubelet root directory to match the BOSH filesystem structure.
# Kubelet ignores the root-dir argument and creates the socket at:
# /var/lib/kubelet/device-plugins/=kubelet.sock
# Therefore, we linked /var/lib/kubelet to the specified root directory.
# https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/#device-plugin-implementation

force_link_dir "/var/vcap/data/k3s-agent/kubelet" "/var/lib/kubelet"

if k3s_check_config; then
  echo "k3s check-config success"
else
  echo "k3s check-config failure, check logs"
  exit 1
fi

# Create secrets
SECRETS_DIR='<%= p("k3s.host-secrets.dir") %>'
mkdir -p "$SECRETS_DIR"
<% p("k3s.host-secrets.files", []).each do |stc| %>
# <%= stc["name"] %>
/bin/cat > "$SECRETS_DIR/<%= stc['name'] %>" << END_OF_SECRET
<%= stc["content"] %>
END_OF_SECRET
<% end %>
chown -R vcap:vcap "$SECRETS_DIR"

# Prepare a persistent directory so /etc/rancher/node paswword file is kept on bosh recreate
mkdir -p /etc
mkdir -p /var/vcap/store/k3s-node/etc/rancher
ln -sf /var/vcap/store/k3s-node/etc/rancher /etc/rancher

# Fix cert chmod
chmod go-r /var/vcap/jobs/k3s-server/config/datastore-*

# Copy additional manifest file
mkdir -p /var/vcap/store/k3s-server/
cp -f ${JOB_DIR}/config/additional-manifest.yaml /var/vcap/store/k3s-server/server/manifests/additional-manifest.yaml

#copy images to containerd expected location (datadir/images) for airgap start.
# see https://rancher.com/docs/k3s/latest/en/installation/airgap/
mkdir -p /var/vcap/store/k3s-server/agent/images
cp /var/vcap/packages/k3s-images/k3s-airgap-images-amd64.tar.gz /var/vcap/store/k3s-server/agent/images
gunzip -f /var/vcap/store/k3s-server/agent/images/k3s-airgap-images-amd64.tar.gz


set -e
# Set overlay IP
OVERLAY_IP="<%= spec.ip %>"
<% if spec.ip != spec.networks.marshal_dump.values.first.ip %>
  OVERLAY_IP="<%= spec.networks.marshal_dump.values.last.ip %>"
<% end %>
<% if spec.ip != spec.networks.marshal_dump.values.last.ip %>
  OVERLAY_IP="<%= spec.networks.marshal_dump.values.first.ip %>"
<% end %>

# Disable VxLAN harware options on private interface
# (see: https://github.com/orange-cloudfoundry/paas-templates/issues/2062)
INTERFACE="$(ip --brief address show | grep "${OVERLAY_IP}" | awk '{print $1}')"

#clean previous patch services
! rm -f /etc/systemd/system/ethtool-patch-*.service

#--- Disable hardware option on private interface
<% p('k3s.disable-vxlan-hardware-options').each do |option| %>
disable_ni_hardware_option "<%= option %>"
<% end %>

exit 0